/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package transformer.kotlin

import kotlinx.coroutines.*

class App {
    val greeting: String = "Nothing to see here"
    val hello: String
        get() {
            return "Hello world."
        }

    fun runExampleBlocking(tag: String) = runBlocking {
        println("$tag: 1 - Entering...")
        launch { // launch a new coroutine and continue
            println(Eventhub().send("$tag: test", 1000L))
            println("$tag: World!")
        }
        println("$tag: 3 - Hello")
        println("$tag: 5 - Leaving...")
    }

    suspend fun runExampleNonBlock(tag: String, timeout: Long) = runBlocking {
        println("$tag: Entering Function...")
        launch {
            Eventhub().send("$tag: test", timeout)
            println("$tag:World!")
        }
        println("$tag: Hello")
        println("$tag: Leaving Function...")
    }
}

fun main(args: Array<String>) {
    // println(App().greeting)
    // App().runExampleBlocking("1")
    // App().runExampleBlocking("2")


    println("> [" + Thread.currentThread().name + "] Starting the Stuff")
    runBlocking {
        async {
            App().runExampleNonBlock("1", 5000L)
        }
        delay(1000L)
        async {
            App().runExampleNonBlock("2", 1000L)
        }
        async {
            App().runExampleNonBlock("3", 100L)
        }
    }
    println("> [" + Thread.currentThread().name + "] The show is over")
}
